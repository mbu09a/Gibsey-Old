name: gibsey-dev-stack
services:
  backend:
    build: ../apps/backend
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - ../apps/backend:/code
    ports: ["8000:8000"]
    env_file:
      - ../.env

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: gibsey
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: gibsey
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gibsey -d gibsey"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  frontend:
    build: 
      context: ../apps/frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ../apps/frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_BASE=http://localhost:8000
    depends_on:
      - backend
      
  kafka:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.2
    command: >-
      redpanda start
      --overprovisioned
      --smp 1
      --memory 256M
      --reserve-memory 0M
      --node-id 0
      --check=false
      --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      --advertise-kafka-addr PLAINTEXT://kafka:29092,OUTSIDE://localhost:9092
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9092:9092"        # Kafka API (external)
      - "29092:29092"      # Kafka API (internal)
      - "9644:9644"        # Admin HTTP (optional)
    healthcheck:
      test: ["CMD", "rpk", "cluster", "info", "--brokers=kafka:29092"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  kafka-init:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.2
    depends_on: [kafka]
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      echo 'Waiting for Kafka to be ready...' && \
      until rpk cluster info --brokers kafka:9092 >/dev/null 2>&1; do
        echo 'Waiting for Kafka...' && sleep 1;
      done && \
      echo 'Creating topics...' && \
      rpk topic create gift_events --brokers kafka:9092 --partitions 1 --replicas 1 && \
      echo 'Topics created successfully!'
      "
    volumes:
      - ../scripts:/code/scripts
      
  faust-worker:
    build:
      context: ../apps/backend
      dockerfile: Dockerfile.faust
    volumes:
      - ../apps/backend:/code
    env_file:
      - ../.env
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - PYTHONPATH=/code
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - DATABASE_URL=postgresql://gibsey:secret@db:5432/gibsey
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; socket.create_connection(('kafka', 29092), timeout=5)"]
      interval: 5s
      timeout: 5s
      retries: 5