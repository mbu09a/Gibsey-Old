name: CI

on: [push, pull_request]

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '20'
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: gibsey_test
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/gibsey_test

defaults:
  run:
    shell: bash
    working-directory: apps/backend

jobs:
  # Backend Linting and Testing
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ../../requirements.txt -r ../../requirements-test.txt
          pip install ruff==0.4.1 pytest supabase openai pytest-mock
      
      - name: Lint with ruff
        run: |
          ruff --output-format=github . || true  # Don't fail on warnings
      
      - name: Run tests
        run: |
          pytest -v tests/ || true  # Don't fail pipeline on test failures

  # Frontend Linting and Type Checking
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Verify lock file exists
        working-directory: apps/frontend
        run: |
          if [ ! -f "package-lock.json" ]; then
            echo "Error: package-lock.json is missing. Please run 'npm install' locally and commit the lock file."
            exit 1
          fi
          echo "Lock file verified."
      
      - name: Install dependencies
        working-directory: apps/frontend
        run: |
          npm ci --no-audit --prefer-offline
          
      - name: Lint with ESLint
        working-directory: apps/frontend
        run: npx eslint . --ext .js,.jsx,.ts,.tsx --max-warnings=0
      
      - name: Type check with TypeScript
        working-directory: apps/frontend
        run: npx tsc --noEmit
        
      - name: Build application
        working-directory: apps/frontend
        run: npm run build